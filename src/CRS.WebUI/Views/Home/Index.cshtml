@{
    ViewData["Title"] = "Home";
    //   Layout = "~/Views/Shared/_Layout.cshtml";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    <!-- Modal -->
    <div class="modal fade" id="roomDetailsModal" tabindex="-1" aria-labelledby="roomDetailsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="roomDetailsModalLabel">Deluxe Double Room with Heating</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <!-- Carousel Slider with Arrows -->
                            <div id="carouselExampleModal" class="carousel slide" data-bs-ride="carousel">
                                <!-- Carousel Indicators -->
                                <div class="carousel-indicators">
                                    <button type="button" data-bs-target="#carouselExampleModal" data-bs-slide-to="0" class="active"></button>
                                    <button type="button" data-bs-target="#carouselExampleModal" data-bs-slide-to="1"></button>
                                    <button type="button" data-bs-target="#carouselExampleModal" data-bs-slide-to="2"></button>
                                </div>

                                <!-- Carousel Items -->
                                <div class="carousel-inner">
                                    <div class="carousel-item active">
                                        <img src="~/images/img2.webp" class="d-block w-100" alt="Room Image 1">
                                    </div>
                                    <div class="carousel-item">
                                        <img src="~/images/img1.webp" class="d-block w-100" alt="Room Image 2">
                                    </div>
                                    <div class="carousel-item">
                                        <img src="~/images/img1.webp" class="d-block w-100" alt="Room Image 3">
                                    </div>
                                </div>

                                <!-- Carousel Controls (Arrows) -->
                                <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleModal" data-bs-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Previous</span>
                                </button>
                                <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleModal" data-bs-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Next</span>
                                </button>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <!-- Room Details -->
                            <p><strong>Price:</strong> <span class="text-success">35% OFF</span> <del>₹634</del> <span class="fs-4">₹412</span></p>
                            <p><strong>Guest:</strong> x 1 Guest</p>
                            <p><strong>Room Type:</strong> Bed in 4 Bed Mixed Dormitory with Heating</p>
                            <div class="">
                                <ul class="list-none grid grid-cols-2 gap-2 mt-3">
                                    <li class="flex gap-2 items-center">
                                        <img alt="Tea/Coffee maker" class="mx-1 lg:w-5 lg:h-5 w-4 h-4" data-nimg="1" height="20" src="img/image-1738225433496.svg" style="color: transparent;" title="Tea/Coffee maker" width="20">
                                        <div class="text-black text-xs md:text-lg">Tea/Coffee maker</div>
                                    </li>
                                    <li class="flex gap-2 items-center">
                                        <img alt="Double bed" class="mx-1 lg:w-5 lg:h-5 w-4 h-4" data-nimg="1" height="20" src="img/Double%20bed-1682510341981.svg" style="color: transparent;" title="Double bed" width="20">
                                        <div class="text-black text-xs md:text-lg">Double bed</div>
                                    </li>
                                    <li class="flex gap-2 items-center">
                                        <img alt="Bedside lamp" class="mx-1 lg:w-5 lg:h-5 w-4 h-4" data-nimg="1" height="20" src="img/Bedside%20lamp-1682510090251.svg" style="color: transparent;" title="Bedside lamp" width="20">
                                        <div class="text-black text-xs md:text-lg">Bedside lamp</div>
                                    </li>

                                    <li class="flex gap-2 items-center">
                                        <img alt="Washroom" class="mx-1 lg:w-5 lg:h-5 w-4 h-4" data-nimg="1" height="20" src="img/Washroom-1682511196310.svg"
                                             style="color: transparent;" title="Washroom" width="20">
                                        <div class="text-black text-xs md:text-lg">Washroom</div>
                                    </li>
                                    <li class="flex gap-2 items-center">
                                        <img alt="Linen" class="mx-1 lg:w-5 lg:h-5 w-4 h-4" data-nimg="1" height="20" src="img/Linen-1682510733500.svg" style="color: transparent;" title="Linen" width="20">
                                        <div class="text-black text-xs md:text-lg">Linen</div>
                                    </li>
                                    <li class="flex gap-2 items-center">
                                        <img alt="Charging point" class="mx-1 lg:w-5 lg:h-5 w-4 h-4" data-nimg="1" height="20" src="img/Charging%20point-1682510251029.svg" style="color: transparent;" title="Charging point" width="20">
                                        <div class="text-black text-xs md:text-lg">Charging point</div>
                                    </li>
                                    <li class="flex gap-2 items-center">
                                        <img alt="Pillow" class="mx-1 lg:w-5 lg:h-5 w-4 h-4" data-nimg="1" height="20" src="img/Pillows-1682510921429.svg"
                                             style="color: transparent;" title="Pillow" width="20">
                                        <div class="text-black text-xs md:text-lg">Pillow</div>
                                    </li>
                                    <li class="flex gap-2 items-center">
                                        <img alt="Blanket" class="mx-1 lg:w-5 lg:h-5 w-4 h-4" data-nimg="1" height="20" src="img/Blanket-1682510144012.svg"
                                             style="color: transparent;" title="Blanket" width="20">
                                        <div class="text-black text-xs md:text-lg">Blanket</div>
                                    </li>
                                    <li class="flex gap-2 items-center">
                                        <img alt="Towel" class="mx-1 lg:w-5 lg:h-5 w-4 h-4" data-nimg="1" height="20" src="img/TOWEL-1682511119678.svg" style="color: transparent;" title="Towel" width="20">
                                        <div class="text-black text-xs md:text-lg">Towel</div>
                                    </li>
                                    <li class="flex gap-2 items-center">
                                        <img alt="Wi-Fi" class="mx-1 lg:w-5 lg:h-5 w-4 h-4" data-nimg="1" height="20" src="img/Wifi-1682511242681.svg" style="color: transparent;" title="Wi-Fi" width="20">
                                        <div class="text-black text-xs md:text-lg">Wi-Fi</div>
                                    </li>
                                    <li class="flex gap-2 items-center">
                                        <img alt="Daily housekeeping" class="mx-1 lg:w-5 lg:h-5 w-4 h-4" data-nimg="1" height="20" src="img/Housekeeping-1682510596003.svg" style="color: transparent;" title="Daily housekeeping" width="20">
                                        <div class="text-black text-xs md:text-lg">Daily housekeeping</div>
                                    </li>
                                    <li class="flex gap-2 items-center">
                                        <img alt="Air conditioner" class="mx-1 lg:w-5 lg:h-5 w-4 h-4" data-nimg="1" height="20" src="img/Air%20conditioner-1682509941937.svg" style="color: transparent;" title="Air conditioner" width="20">
                                        <div class="text-black text-xs md:text-lg">Air conditioner</div>
                                    </li>
                                    <li class="flex gap-2 items-center">
                                        <img alt="Wardrobe" class="mx-1 lg:w-5 lg:h-5 w-4 h-4" data-nimg="1" height="20" src="img/closet-1682567764031.svg"
                                             style="color: transparent;" title="Wardrobe" width="20">
                                        <div class="text-black text-xs md:text-lg">Wardrobe</div>
                                    </li>

                                    <li class="flex gap-2 items-center">
                                        <img alt="Toiletries" class="mx-1 lg:w-5 lg:h-5 w-4 h-4" data-nimg="1" height="20" src="img/Toiletries-1682511108833.svg" style="color: transparent;" title="Toiletries" width="20">
                                        <div class="text-black text-xs md:text-lg">Toiletries</div>
                                    </li>
                                </ul>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

 
    <div class="container py-4">
        <!-- Availability Section -->
        <div class="mb-4 col-md-12 m-auto text-center">
            <h3 class="maintitle">Your’s Wellness Program: Your Path to Well-Being</h3>
        </div>

        <div class="searhCrs">

            <div class="booking-containerCrs">
                <div class="booking-field">
                    <i class="icon1 fa-solid fa-magnifying-glass"></i>
                    <input type="text" placeholder="Search location" value="Naad Wellness, Kundli" readonly>
                </div>

                <div class="booking-field booking-fieldDateSelector">
                    <i class="icon1 fas fa-calendar-days"></i>
                    <input id="dateRangePicker" type="text" placeholder="Select date ">
                </div>
                <div class="booking-field">
                    <i class="icon2 fa-solid fa-bed-pulse"></i>
                   
                    <button onclick="togglePopup()" class="person_filled_button">1 Room</button>
                </div>

                <div class="booking-field">
                <i class="icon2 fa-solid fa-people-group"></i>
                <button onclick="togglePopup()" class="person_filled_button" id="selectionSummary">1 Adult, 0 Child</button>

                <div id="popup" class="popup-container">
                    <div class="header">
                        <span>Accommodation & Pax</span>
                        <button class="close-btn" onclick="togglePopup()">Close</button>
                    </div>

                    <div id="rooms">
                        <div class="room" data-room-type="1">
                            <span>Room 1</span>
                            <div class="counter">
                                <span class="userPerson">Adults</span>
                                <button onclick="updateCounter(this, 1, 'adults', -1)">−</button>
                                <span class="adults">1</span>
                                <button onclick="updateCounter(this, 1, 'adults', 1)">+</button>
                            </div>
                            <div class="counter">
                                <span class="userPerson">Children</span>
                                <button onclick="updateCounter(this, 1, 'children', -1)">−</button>
                                <span class="children">0</span>
                                <button onclick="updateCounter(this, 1, 'children', 1)">+</button>
                            </div>
                        </div>
                    </div>

                    <div class="add-room" onclick="addRoom()">
                        <button>+</button> Add Room
                    </div>
                </div>

                </div>

                <button class="book-now">BOOK NOW</button>
            </div>
        </div>

        <div class="crsContainer">
            <div class="row g-3">
                <div class="col-md-8">
                    <div id="div_RoomTypeGridPartialView">
                        
                    </div>
                </div>

                <div class="col-md-4 col-md-4 bg-light rounded p-4">
                    <div id="div_SummaryPartialView">
                  
                </div>
                   
                            <div class="containerStay">
                    <div id="div_PackagesPartialView">
                    @Html.Partial("_index/_packages")
                    </<div>
                           
                        </div>
                    </div><div class="toggle-btn toggleButton" onclick="toggleRows2(this)">
                        <img src="~/images/arrowbtn.svg" width="24">
                    </div> 
                </div>
            </div>
        </div>

    </div>



    <!-- Why You'll Love It Here -->
    @Html.Partial("_index/_whyLoveIt")
    <!-- Location -->
    @Html.Partial("_index/_location")


    @Html.Partial("_index/_faqs")


    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="~/customjs/roomtype/roomtype.js"></script>
    <script src="~/customjs/roomtype/availabilitycalender.js"></script>
    <script type="text/javascript">
            function PackagesPartialView() {

        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: '/Home/PackagesPartialView',
            //data: JSON.stringify(inputDTO),
            cache: false,
            dataType: "html",
            success: function (data, textStatus, jqXHR) {
                $('#div_PackagesPartialView').html(data);
            },
            error: function (result) {
                //UnblockUI();
                $erroralert("Transaction Failed!", result.responseText);
            }
        });


    }
        let currentDate = new Date();
        currentDate.setDate(currentDate.getDate() + 7);  // 7 days in the future

        // Create a copy of currentDate for nextDate
        let nextDate = new Date(currentDate);
        nextDate.setDate(nextDate.getDate() + 1);  // one day after currentDate


        $(document).ready(function () {
            RoomTypeGridPartialView(currentDate.toISOString().split('T')[0], nextDate.toISOString().split('T')[0]);
            PackagesPartialView();
        });
    </script>
    <script>
        function scrollSlider(direction, id) {
            const slider = document.querySelector(".date-slider_" + id);
            const scrollAmount = 150;
            slider.scrollLeft += direction * scrollAmount;
        }
       
    </script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="~/customjs/roomtype/roomtype.js"></script>
    <script>
               
                
        function submitPaxDataAjax() {
            const rooms = document.querySelectorAll("#rooms .room");
            const paxList = [];

            rooms.forEach((room, index) => {
                const adults = parseInt(room.querySelector(".adults").innerText);
                const children = parseInt(room.querySelector(".children").innerText);
                paxList.push({
                    RoomNumber: index + 1,
                    Adults: adults,
                    Children: children
                });
            });

            $.ajax({
                url: '/Home/Pax',
                type: 'POST',
                data: JSON.stringify(paxList),
                contentType: 'application/json',
                success: function (response) {
                    if (response.redirectUrl) {
                        window.location.href = "/Home/Booking"; 
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error:", error);
                    alert("Something went wrong while submitting pax data.");
                }
            });
        }
        let _currentDate = new Date();
        _currentDate = _currentDate.setDate(_currentDate.getDate() + 1)
        flatpickr("#dateRangePicker", {
            mode: "range", 
            dateFormat: "d-M-Y", 
            showMonths: 2, 
            prevArrow: "<span>&lt;</span>", 
            nextArrow: "<span>&gt;</span>", 
            defaultDate: [currentDate, nextDate],
            minDate: _currentDate,
            onChange: function (selectedDates, dateStr, instance) {
                currentDate = selectedDates[0];
                nextDate = selectedDates[1];
                if (selectedDates[0] != null && selectedDates[0] != undefined && selectedDates[0] != "" && selectedDates[1] != null && selectedDates[1] != undefined && selectedDates[1] != "")
                    RoomTypeGridPartialView(selectedDates[0], selectedDates[1]);
            }
        });
    </script>

    <script>
        function toggleRows(button) {
            let rowsContainer = button.closest(".container").querySelector(".rowsContainer");

            if (!rowsContainer.classList.contains("expanded")) {
                rowsContainer.classList.add("expanded");
                button.innerHTML = "&#x25B2;"; // Up Arrow
                button.style.display = "none"; // Hide the button after expanding
            }
        }

        function toggleRows2(button) {
            let rowsContainer = button.closest(".container").querySelector(".rowsContainer2");

            if (!rowsContainer.classList.contains("expanded")) {
                rowsContainer.classList.add("expanded");
                button.innerHTML = "&#x25B2;"; // Up Arrow
                button.style.display = "none"; // Hide the button after expanding
            }
        }

    </script>

    

    <script>
                    let RoomSelections = {};
    let PaxData = []; // Use PaxPerRoom if needed
    let tempPax = { Adults: 1, Children: 0 }; // Store pax before room selection
    let roomCount = 0; // Track rooms in popup
        
       function togglePopup() {
        const popup = document.getElementById("popup");
        popup.style.display = (popup.style.display === "block") ? "none" : "block";
    }


           function updateCounter(button, roomType, type, change) {
        console.log(`updateCounter: roomType=${roomType}, type=${type}, change=${change}`); // Debug

        // Update tempPax (popup uses roomType=1 or dynamic roomCount, not item.Id)
        let adults = tempPax.Adults;
        let children = tempPax.Children;

        if (type === 'adults') {
            let newAdults = adults + change;
            if (newAdults < 1 || newAdults > 3 || (newAdults + children > 3)) {
                console.warn(`Invalid adult change: newAdults=${newAdults}`);
                return;
            }
            tempPax.Adults = newAdults;
        } else if (type === 'children') {
            let newChildren = children + change;
            if (newChildren < 0 || newChildren > 2 || (adults + newChildren > 3)) {
                console.warn(`Invalid child change: newChildren=${newChildren}`);
                return;
            }
            tempPax.Children = newChildren;
        }

        // Update UI in popup for all rooms
        document.querySelectorAll('#rooms .room').forEach(room => {
            const adultSpan = room.querySelector('.adults');
            const childSpan = room.querySelector('.children');
            if (adultSpan) adultSpan.textContent = tempPax.Adults;
            if (childSpan) childSpan.textContent = tempPax.Children;
        });

        // Update RoomSelections if room is selected
        Object.keys(RoomSelections).forEach(id => {
            RoomSelections[id].Pax.Adults = tempPax.Adults;
            RoomSelections[id].Pax.Children = tempPax.Children;

            // Update guest count in room HTML
            const roomElement = document.querySelector(`.roominfo_selector input[name="RoomTypeId"][value="${id}"]`)?.closest('.col-md-8');
            if (roomElement) {
                const totalGuests = tempPax.Adults + tempPax.Children;
                const guestText = roomElement.querySelector('.text-muted.mb-1');
                if (guestText) {
                    guestText.innerHTML = `<i class="bi bi-person"></i> x ${totalGuests} Guest${totalGuests !== 1 ? 's' : ''}`;
                }
            }
        });

        console.log(`Updated tempPax:`, tempPax); // Debug
        updatePaxData();
        updateSummaryDisplay();
        SummaryPartialView();
    }
       
        function updatePaxPerRoom(roomId, adults, children) {
      
        const existingIndex = PaxPerRoom.findIndex(p => p.RoomNumber == roomId);

        if (existingIndex >= 0) {
            PaxPerRoom[existingIndex].Adults = adults;
            PaxPerRoom[existingIndex].Children = children;
        } else {
            PaxPerRoom.push({
                RoomNumber: roomId,
                Adults: adults,
                Children: children
            });
        }
    }

          function updateSummaryDisplay() {
          let totalAdults = 0;
           let totalChildren = 0;

        PaxData.forEach(pax => {
            totalAdults += pax.Adults;
            totalChildren += pax.Children;
        });

        const summaryText = `${totalAdults} Adult${totalAdults !== 1 ? 's' : ''}, ${totalChildren} Child${totalChildren !== 1 ? 'ren' : ''}`;
        $("#selectionSummary").text(summaryText);
    }

    function updateRoomSelectionsWithPax() {
        
        PaxData.forEach((pax, index) => {
            const roomType = index + 1;
            if (RoomSelections[roomType]) {
                RoomSelections[roomType].Pax = {
                    Adults: pax.Adults,
                    Children: pax.Children
                };
            }
        });

      
        if (Object.keys(RoomSelections).length > 0) {
            SummaryPartialView();
        }
    }

          function addRoom() {
        roomCount++;
        const roomsContainer = document.getElementById("rooms");
        const newRoom = document.createElement('div');
        newRoom.className = 'room';
        newRoom.setAttribute('data-room-type', roomCount);
        newRoom.innerHTML = `
            <span>Room ${roomCount}</span>
            <div class="counter">
                <span class="userPerson">Adults</span>
                <button class="adult-minus">−</button>
                <span class="adults">${tempPax.Adults}</span>
                <button class="adult-plus">+</button>
            </div>
            <div class="counter">
                <span class="userPerson">Children</span>
                <button class="child-minus">−</button>
                <span class="children">${tempPax.Children}</span>
                <button class="child-plus">+</button>
            </div>
        `;

        roomsContainer.appendChild(newRoom);

        // Bind events to counters
        newRoom.querySelectorAll('.adult-minus, .adult-plus, .child-minus, .child-plus').forEach(btn => {
            btn.addEventListener('click', () => {
                const type = btn.classList.contains('adult-minus') || btn.classList.contains('adult-plus') ? 'adults' : 'children';
                const change = btn.classList.contains('adult-minus') || btn.classList.contains('child-minus') ? -1 : 1;
                updateCounter(btn, roomCount, type, change);
            });
        });

        console.log(`Added popup room ${roomCount}`); // Debug
        updateSummaryDisplay();
    }


        document.addEventListener("click", function(event) {
        const popup = document.getElementById("popup");
        const buttons = document.querySelectorAll(".person_filled_button");

        if (!popup.contains(event.target) && ![...buttons].some(btn => btn.contains(event.target))) {
            popup.style.display = "none";
        }
    });


             function updateSummaryDisplay() {
        let totalAdults = 0;
        let totalChildren = 0;

        // Use PaxData if rooms selected, else tempPax
        if (PaxData.length > 0) {
            PaxData.forEach(pax => {
                totalAdults += pax.Adults;
                totalChildren += pax.Children;
            });
        } else {
            totalAdults = tempPax.Adults;
            totalChildren = tempPax.Children;
        }

        const summaryText = `${totalAdults} Adult${totalAdults !== 1 ? 's' : ''}, ${totalChildren} Child${totalChildren !== 1 ? 'ren' : ''}`;
        $("#selectionSummary").text(summaryText);
        console.log(`Summary: ${summaryText}`); // Debug
    }
    // Close popup when clicking outside
      document.addEventListener("click", function(event) {
        const popup = document.getElementById("popup");
        const buttons = document.querySelectorAll(".person_filled_button");

        if (!popup.contains(event.target) && ![...buttons].some(btn => btn.contains(event.target))) {
            popup.style.display = "none";
        }
    });

    </script>



    

